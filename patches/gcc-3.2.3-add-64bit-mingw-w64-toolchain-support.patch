diff --git a/gcc/config.gcc b/gcc/config.gcc
index 9cb1c9f..1813ef8 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -1535,7 +1535,7 @@ i[34567]86-*-mingw32*)
 	fi
 	exeext=.exe
 	;;
-i[34567]86-*-mingw32*)
+i[34567]86-*-mingw32* | x86_64-*-mingw32*)
 	tm_file=i386/mingw32.h
 	float_format=i386
 	xm_defines=POSIX
diff --git a/gcc/config/i386/xm-mingw32.h b/gcc/config/i386/xm-mingw32.h
index b566fd9..9c3abb4 100644
--- a/gcc/config/i386/xm-mingw32.h
+++ b/gcc/config/i386/xm-mingw32.h
@@ -32,6 +32,10 @@ Boston, MA 02111-1307, USA.  */
 #undef PATH_SEPARATOR
 #define PATH_SEPARATOR ';'
 
+#if !defined CHAR_BIT && defined HAVE_LIMITS_H
+# include <limits.h>
+#endif
+
 /* This describes the machine the compiler is hosted on.  */
 #define HOST_BITS_PER_CHAR  CHAR_BIT
 #define HOST_BITS_PER_SHORT (CHAR_BIT * SIZEOF_SHORT)
@@ -52,6 +56,10 @@ Boston, MA 02111-1307, USA.  */
 #endif
 #endif /* no long long */
 
+#ifdef __MINGW64__
+# define HOST_BITS_PER_PTR  HOST_BITS_PER_LONGLONG
+#endif
+
 /* Find the largest host integer type and set its size and type.  */
 
 /* Use long long on the host if the target has a wider long type than
@@ -79,6 +87,10 @@ Boston, MA 02111-1307, USA.  */
 
 #ifndef HOST_BITS_PER_WIDE_INT
 
+#if defined __MINGW64__ && defined HOST_BITS_PER_LONGLONG && HOST_BITS_PER_LONGLONG > HOST_BITS_PER_LONG
+# define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONGLONG
+# define HOST_WIDE_INT __int64
+#else
 # if HOST_BITS_PER_LONG > HOST_BITS_PER_INT
 #  define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONG
 #  define HOST_WIDE_INT long
@@ -86,6 +98,7 @@ Boston, MA 02111-1307, USA.  */
 #  define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_INT
 #  define HOST_WIDE_INT int
 # endif
+#endif
 
 #endif /* ! HOST_BITS_PER_WIDE_INT */
 
diff --git a/gcc/hwint.h b/gcc/hwint.h
index 57d7edf..ea3b190 100644
--- a/gcc/hwint.h
+++ b/gcc/hwint.h
@@ -9,6 +9,10 @@
 #ifndef GCC_HWINT_H
 #define GCC_HWINT_H
 
+#if !defined CHAR_BIT && defined HAVE_LIMITS_H
+# include <limits.h>
+#endif
+
 /* This describes the machine the compiler is hosted on.  */
 #define HOST_BITS_PER_CHAR  CHAR_BIT
 #define HOST_BITS_PER_SHORT (CHAR_BIT * SIZEOF_SHORT)
@@ -28,6 +32,10 @@
 # endif /* gcc */
 #endif
 #endif /* no long long */
+
+#ifdef __MINGW64__
+# define HOST_BITS_PER_PTR  HOST_BITS_PER_LONGLONG
+#endif
 
 /* Find the largest host integer type and set its size and type.  */
 
@@ -56,6 +64,10 @@
 
 #ifndef HOST_BITS_PER_WIDE_INT
 
+#if defined __MINGW64__ && defined HOST_BITS_PER_LONGLONG && HOST_BITS_PER_LONGLONG > HOST_BITS_PER_LONG
+# define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONGLONG
+# define HOST_WIDE_INT long long
+#else
 # if HOST_BITS_PER_LONG > HOST_BITS_PER_INT
 #  define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONG
 #  define HOST_WIDE_INT long
@@ -63,6 +75,7 @@
 #  define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_INT
 #  define HOST_WIDE_INT int
 # endif
+#endif
 
 #endif /* ! HOST_BITS_PER_WIDE_INT */
 
diff --git a/include/splay-tree.h b/include/splay-tree.h
index 4b7a7bf..19d9171 100644
--- a/include/splay-tree.h
+++ b/include/splay-tree.h
@@ -40,8 +40,13 @@ extern "C" {
    these types, if necessary.  These types should be sufficiently wide
    that any pointer or scalar can be cast to these types, and then
    cast back, without loss of precision.  */
+#ifdef __MINGW64__
+typedef unsigned long long int splay_tree_key;
+typedef unsigned long long int splay_tree_value;
+#else
 typedef unsigned long int splay_tree_key;
 typedef unsigned long int splay_tree_value;
+#endif
 
 /* Forward declaration for a node in the tree.  */
 typedef struct splay_tree_node_s *splay_tree_node;
